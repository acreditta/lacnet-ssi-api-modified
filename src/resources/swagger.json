{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "SSI API",
    "description": "Self-Sovereign Identity API for management of Trusted Lists & Verifiable Credentials"
  },
  "host": "localhost:8080",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "paths": {
    "/pki/pkd": {
      "get": {
        "tags": [
          "Public Key Directory"
        ],
        "summary": "List PKDs",
        "description": "List all deployed Public Key Directories",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": [
                "0x5967b9b16024Ffc06Ef25Af6D77de00c5C5D621A",
                "0x5967b9b16024Ffc06Ef25Af6D77de00c5C5D621B"
              ]
            }
          },
          "500": {
            "description": "Error"
          }
        }
      }
    },
    "/pki/pkd/{address}/entities": {
      "get": {
        "tags": [
          "Public Key Directory"
        ],
        "summary": "List the entities of a PKD",
        "description": "List all the entities registered in the specified Public Key Directory",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "address",
            "description": "The PKD address",
            "in": "path",
            "required": true,
            "type": "string",
            "default": "0x5967b9b16024Ffc06Ef25Af6D77de00c5C5D621B"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": [
                {
                  "address": "Entity address",
                  "did": "Entity DID",
                  "expires": "Entity expiration date",
                  "status": "Entity status (active|revoked)"
                }
              ]
            }
          },
          "500": {
            "description": "Error"
          }
        }
      }
    },
    "/pki/pkd/deploy": {
      "post": {
        "tags": [
          "Public Key Directory"
        ],
        "summary": "Deploy PKD",
        "description": "Deploy a new Public Key Directory contract",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "address": "The PKD address",
                "hash": "The blockchain transaction hash"
              }
            }
          },
          "500": {
            "description": "Error"
          }
        }
      }
    },
    "/pki/pkd/{address}/register": {
      "post": {
        "tags": [
          "Public Key Directory"
        ],
        "summary": "Register an entity in the PKD",
        "description": "Register a new entity in the Public Key Directory",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "address",
            "description": "The PKD address",
            "in": "path",
            "required": true,
            "type": "string",
            "default": "0x5967b9b16024Ffc06Ef25Af6D77de00c5C5D621B"
          },
          {
            "name": "body",
            "description": "The entity information",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "address": {
                  "type": "string",
                  "description": "The entity address (useful when is different from DID, for example TL address)",
                  "default": "0x5967b9b16024Ffc06Ef25Af6D77de00c5C5D621A"
                },
                "did": {
                  "type": "string",
                  "description": "The DID of the entity",
                  "default": "did:lac:main:0x5967b9b16024Ffc06Ef25Af6D77de00c5C5D621A"
                },
                "expires": {
                  "type": "string",
                  "description": "The expiration date in UNIX time - seconds",
                  "default": "1757247663"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "hash": "The blockchain transaction hash"
              }
            }
          },
          "404": {
            "description": "PKD not found or invalid address"
          },
          "500": {
            "description": "Error"
          }
        }
      }
    },
    "/pki/pkd/{address}/revoke/{entity}": {
      "delete": {
        "tags": [
          "Public Key Directory"
        ],
        "summary": "Revoke an entity in the PKD",
        "description": "Revoke an entity registered in the Public Key Directory",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "address",
            "description": "The PKD address",
            "in": "path",
            "required": true,
            "type": "string",
            "default": "0x5967b9b16024Ffc06Ef25Af6D77de00c5C5D621B"
          },
          {
            "name": "entity",
            "description": "The Entity address",
            "in": "path",
            "required": true,
            "type": "string",
            "default": "0x5967b9b16024Ffc06Ef25Af6D77de00c5C5D621C"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "hash": "The blockchain transaction hash"
              }
            }
          },
          "404": {
            "description": "PKD not found or invalid address"
          },
          "500": {
            "description": "Error"
          }
        }
      }
    },
    "/pki/tl": {
      "get": {
        "tags": [
          "Trusted List"
        ],
        "summary": "List TLs",
        "description": "List all deployed Trusted Lists",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": [
                {
                  "address": "The entity address",
                  "parent": "The address of the parent TL or PKD",
                  "name": "The name of the entity"
                }
              ]
            }
          },
          "500": {
            "description": "Error"
          }
        }
      }
    },
    "/pki/tl/{address}/entities": {
      "get": {
        "tags": [
          "Trusted List"
        ],
        "summary": "List the entities of a TL",
        "description": "List all the entities registered in the specified Trusted List",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "address",
            "description": "The TL address",
            "in": "path",
            "required": true,
            "type": "string",
            "default": "0x5967b9b16024Ffc06Ef25Af6D77de00c5C5D621B"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": [
                {
                  "address": "Entity address",
                  "did": "Entity DID",
                  "expires": "Entity expiration date",
                  "status": "Entity status (active|revoked)"
                }
              ]
            }
          },
          "500": {
            "description": "Error"
          }
        }
      }
    },
    "/pki/tl/deploy": {
      "post": {
        "tags": [
          "Trusted List"
        ],
        "summary": "Deploy TL",
        "description": "Deploy a new Trusted List contract",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "description": "The entity information",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "parent": {
                  "type": "string",
                  "description": "The parent (TL or PKD) address",
                  "default": "0xF49ECE7f8aaCfba94EB5f7b296Ad7175d9BB501d"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the entity",
                  "default": "Trusted List 1"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "address": "The TL address",
                "hash": "The blockchain transaction hash"
              }
            }
          },
          "500": {
            "description": "Error"
          }
        }
      }
    },
    "/pki/tl/{address}/register": {
      "post": {
        "tags": [
          "Trusted List"
        ],
        "summary": "Register an entity in the TL",
        "description": "Register a new entity in the Public Key Directory",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "address",
            "description": "The TL address",
            "in": "path",
            "required": true,
            "type": "string",
            "default": "0x5967b9b16024Ffc06Ef25Af6D77de00c5C5D6313"
          },
          {
            "name": "body",
            "description": "The entity information",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "address": {
                  "type": "string",
                  "description": "The entity address (useful when is different from DID, for example TL address)",
                  "default": "0x5967b9b16024Ffc06Ef25Af6D77de00c5C5D671A"
                },
                "did": {
                  "type": "string",
                  "description": "The DID of the entity",
                  "default": "did:lac:main:0x5967b9b16024Ffc06Ef25Af6D77de00c5C5D621A"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the entity",
                  "default": "Entity 1 Inc."
                },
                "expires": {
                  "type": "number",
                  "description": "The expiration date in UNIX time - seconds",
                  "default": 1757247663
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "hash": "The blockchain transaction hash"
              }
            }
          },
          "404": {
            "description": "TL not found or invalid address"
          },
          "500": {
            "description": "Error"
          }
        }
      }
    },
    "/pki/tl/{address}/revoke/{entity}": {
      "delete": {
        "tags": [
          "Trusted List"
        ],
        "summary": "Revoke an entity in the TL",
        "description": "Revoke an entity registered in the Trusted List",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "address",
            "description": "The TL address",
            "in": "path",
            "required": true,
            "type": "string",
            "default": "0x6967b9b16024Ffc06Ef25Af6D77de00c5C5D621B"
          },
          {
            "name": "entity",
            "description": "The Entity address",
            "in": "path",
            "required": true,
            "type": "string",
            "default": "0x6967b9b16024Ffc06Ef25Af6D77de00c5C5D621C"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "hash": "The blockchain transaction hash"
              }
            }
          },
          "404": {
            "description": "TL not found or invalid address"
          },
          "500": {
            "description": "Error"
          }
        }
      }
    },
    "/registry/credentials/deploy": {
      "post": {
        "tags": [
          "Credentials Registry"
        ],
        "summary": "Deploy Credentials Registry",
        "description": "Deploys a smart contract that acts as a Credentials Registry",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "address": "The Credentials Registry address",
                "hash": "The blockchain transaction hash"
              }
            }
          },
          "500": {
            "description": "Error"
          }
        }
      }
    },
    "/registry/verifier/deploy": {
      "post": {
        "tags": [
          "Credentials Registry"
        ],
        "summary": "Deploy Claims Verifier",
        "description": "Deploy a Claims Verifier smart contract based on EIP-712",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "description": "The entity information",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "credentialsRegistry": {
                  "type": "string",
                  "description": "The Credentials Registry address",
                  "default": "0xF49ECE7f8aaCfba94EB5f7b296Ad7175d9BB301A"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "address": "The Claims Verifier address",
                "hash": "The blockchain transaction hash"
              }
            }
          },
          "500": {
            "description": "Error"
          }
        }
      }
    },
    "/registry/verifier/{address}/issuer": {
      "put": {
        "tags": [
          "Credentials Registry"
        ],
        "summary": "Register an new issuer",
        "description": "Register a new issuer in the Claims Verifier smart contract",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "address",
            "description": "The Claims Verifier address",
            "in": "path",
            "required": true,
            "type": "string",
            "default": "0x6967b9b16024Ffc06ED25Af6D77de00c5C5D6351"
          },
          {
            "name": "body",
            "description": "The entity information",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "issuer": {
                  "type": "string",
                  "description": "The issuer address",
                  "default": "0xF49ECE7f8aaCfba94EB5f7b296Ad7175d9BB301A"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "hash": "The blockchain transaction hash"
              }
            }
          },
          "500": {
            "description": "Error"
          }
        }
      }
    },
    "/registry/role/{claimsVerifier}/{address}": {
      "get": {
        "tags": [
          "Credentials Registry"
        ],
        "summary": "Get Role",
        "description": "Get the role in the Claims Verifier smart contract",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "claimsVerifier",
            "description": "The Claims Verifier address",
            "in": "path",
            "required": true,
            "type": "string",
            "default": "0x8d50f6E736747e7F68AbEe261d024e36db4D3968"
          },
          {
            "name": "address",
            "description": "The account address",
            "in": "path",
            "required": true,
            "type": "string",
            "default": "0xdfeb89479ad22cf277b3e3100c128a0151e612cb"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "hash": "The blockchain transaction hash"
              }
            }
          },
          "500": {
            "description": "Error"
          }
        }
      }
    },
    "/vc": {
      "get": {
        "tags": [
          "Verifiable Credentials"
        ],
        "summary": "List of issued VC",
        "description": "Get the list of Verifiable Credentials issued",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Status",
            "examples": {
              "application/json": {
                "id": "Credential identifier",
                "status": "Credential status (active, revoked)",
                "claimsVerifier": "The Claims Verifier address"
              }
            }
          },
          "500": {
            "description": "Error"
          }
        }
      }
    },
    
    "/vc/issue": {
      "post": {
        "tags": [
          "Verifiable Credentials"
        ],
        "summary": "Issue a Premade VC",
        "description": "Generate, sign and register a LACChain Verifiable Credential ",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "description": "",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "claimsVerifier": {
                  "type": "string",
                  "description": "The Claims Verifier smart contract address where will be registered the VC",
                  "default": "0x5967b9b16024Ffc06Ef25Af6D77de00c5C5D671A"
                },
                "credential": {
                  "type": "object",
                  "description": "The credential information",
                  "default": {}
                },
                "issuer": {
                  "type": "string",
                  "description": "The issuer address",
                  "default": null
                },
                "privateKey": {
                  "type": "string",
                  "description": "The issuer private key",
                  "default": null
                },
                "distribute": {
                  "type": "boolean",
                  "description": "Distribute the VC on the LACChain network",
                  "default": true
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "id": "VC identifier"
              }
            }
          },
          "500": {
            "description": "Error"
          }
        }
      }
    },
    "/vc/vaccination": {
      "post": {
        "tags": [
          "Verifiable Credentials"
        ],
        "summary": "Issue a Vaccination VC",
        "description": "Generate, sign and register a LACChain Vaccination Verifiable Credential ",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "description": "",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "claimsVerifier": {
                  "type": "string",
                  "description": "The Claims Verifier smart contract address where will be registered the VC",
                  "default": "0x5967b9b16024Ffc06Ef25Af6D77de00c5C5D671A"
                },
                "trustedList": {
                  "type": "string",
                  "description": "The address of the TL that will be used to verify the credential Root of Trust",
                  "default": "0x308fA5fBB3BDF36f496E8C21a80265BC1178025d"
                },
                "data": {
                  "type": "object",
                  "description": "The credential information",
                  "default": {
                    "expirationDate": "2024-06-22T16:04:16.297Z",
                    "administeringCentre": "Mexico City Vaccination Center 1",
                    "healthProfessional": "Juan Perez",
                    "country": "Mexico",
                    "subject": {
                      "did": "did:lac:main:0xeaa30ea9dd1da717034bcd9ebee5b62694d10ce7",
                      "givenName": "Sergio",
                      "familyName": "Ceron",
                      "gender": "male",
                      "birthDate": "1989-01-01T16:04:16.297Z"
                    },
                    "vaccine": {
                      "code": "J07BX03",
                      "batchNumber": "034343",
                      "dose": "1"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "id": "VC identifier"
              }
            }
          },
          "500": {
            "description": "Error"
          }
        }
      }
    },
    "/vc/education": {
      "post": {
        "tags": [
          "Verifiable Credentials"
        ],
        "summary": "Issue a Education VC",
        "description": "Generate, sign and register a RedClara Verifiable Credential for Education",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "description": "",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "claimsVerifier": {
                  "type": "string",
                  "description": "The Claims Verifier smart contract address where will be registered the VC",
                  "default": "0x8d50f6E736747e7F68AbEe261d024e36db4D3968"
                },
                "trustedList": {
                  "type": "string",
                  "description": "The address of the TL that will be used to verify the credential Root of Trust",
                  "default": "0x308fA5fBB3BDF36f496E8C21a80265BC1178025d"
                },
                "data": {
                  "type": "object",
                  "description": "The credential information",
                  "default": {
                    "name": "Diploma Certificado Título y/o Grado",
                    "expirationDate": "2024-06-22T16:04:16.297Z",
                    "subject": {
                      "did": "did:lac:main:0xeaa30ea9dd1da717034bcd9ebee5b62694d10ce7",
                      "givenName": "Name",
                      "familyName": "LastName",
                      "email": "email@email.com",
                      "nationalId": "271367812367"
                    },
                    "signers": [{
                      "did": "did:lac:main:0xeaa30ea9dd1da717034bcd9ebee5b62694d10ce7",
                      "name": "Nombre del signer 1"
                    }],
                    "diploma": {
                      "title": "titulo",
                      "description": "descripción",
                      "category": "categoría",
                      "modality": "modalidad",
                      "url": "https://url.com",
                      "issued": "2022-06-22T16:04:16.297Z",
                      "educationalInstitution": "institución académica",
                      "courseID": "C-444-555",
                      "approved": true,
                      "grade": "calificación",
                      "campusName": "Nombre campus",
                      "city": "MX",
                      "country": "Mexico"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "id": "VC identifier"
              }
            }
          },
          "500": {
            "description": "Error"
          }
        }
      }
    },
    "/vc/education/cudi": {
      "post": {
        "tags": [
          "Verifiable Credentials"
        ],
        "summary": "Issue a Education VC for CUDI",
        "description": "Generate, sign and register a RedClara Verifiable Credential for Education for CUDI",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "description": "",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "claimsVerifier": {
                  "type": "string",
                  "description": "The Claims Verifier smart contract address where will be registered the VC",
                  "default": "0x8d50f6E736747e7F68AbEe261d024e36db4D3968"
                },
                "trustedList": {
                  "type": "string",
                  "description": "The address of the TL that will be used to verify the credential Root of Trust",
                  "default": "0x308fA5fBB3BDF36f496E8C21a80265BC1178025d"
                },
                "data": {
                  "type": "object",
                  "description": "The credential information",
                  "default": {
                    "name": "Diploma Certificado Título y/o Grado",
                    "expirationDate": "2024-06-22T16:04:16.297Z",
                    "subject": {
                      "did": "did:lac:main:0xeaa30ea9dd1da717034bcd9ebee5b62694d10ce7",
                      "givenName": "Name",
                      "familyName": "LastName",
                      "email": "email@email.com",
                      "nationalId": "271367812367"
                    },
                    "signers": [{
                      "did": "did:lac:main:0xeaa30ea9dd1da717034bcd9ebee5b62694d10ce7",
                      "name": "Nombre del signer 1"
                    }],
                    "diploma": {
                      "title": "titulo",
                      "description": "descripción",
                      "category": "categoría",
                      "modality": "modalidad",
                      "url": "https://url.com",
                      "issued": "2022-06-22T16:04:16.297Z",
                      "educationalInstitution": "institución académica",
                      "courseID": "C-444-555",
                      "approved": true,
                      "grade": "calificación",
                      "campusName": "Nombre campus",
                      "city": "MX",
                      "country": "Mexico"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "id": "VC identifier"
              }
            }
          },
          "500": {
            "description": "Error"
          }
        }
      }
    },
    "/vc/education/serena": {
      "post": {
        "tags": [
          "Verifiable Credentials"
        ],
        "summary": "Issue a Education VC for Serena",
        "description": "Generate, sign and register a RedClara Verifiable Credential for Education for Serena",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "description": "",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "claimsVerifier": {
                  "type": "string",
                  "description": "The Claims Verifier smart contract address where will be registered the VC",
                  "default": "0x8d50f6E736747e7F68AbEe261d024e36db4D3968"
                },
                "trustedList": {
                  "type": "string",
                  "description": "The address of the TL that will be used to verify the credential Root of Trust",
                  "default": "0x308fA5fBB3BDF36f496E8C21a80265BC1178025d"
                },
                "data": {
                  "type": "object",
                  "description": "The credential information",
                  "default": {
                    "name": "Diploma Certificado Título y/o Grado",
                    "expirationDate": "2024-06-22T16:04:16.297Z",
                    "subject": {
                      "did": "did:lac:main:0xa08ff271df7c47dea239a1d07f9c97782fc811f8",
                      "givenName": "Sergio",
                      "familyName": "Ceron",
                      "email": "email@email.com",
                      "nationalId": "271367812367"
                    },
                    "signers": [{
                      "did": "did:lac:main:0xeaa30ea9dd1da717034bcd9ebee5b62694d10ce7",
                      "name": "Nombre del signer 1"
                    }],
                    "diploma": {
                      "title": "Ing. en Sistemas Computacionales",
                      "description": "descripción",
                      "category": "categoría",
                      "modality": "modalidad",
                      "url": "https://url.com",
                      "issued": "2022-06-22T16:04:16.297Z",
                      "educationalInstitution": "institución académica",
                      "courseID": "C-444-555",
                      "approved": true,
                      "grade": "calificación",
                      "campusName": "Nombre campus",
                      "city": "MX",
                      "country": "Mexico",
                      "recordID": "1294;99572;3079",
                      "hashQR": "https://phoenix.cic.userena.cl/verificacion.php?doc=OS2%2ByEb4Wo8pwmag2yJLo2fShnLKVo2VN%2B9NQWuLUB8%3D"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "id": "VC identifier"
              }
            }
          },
          "500": {
            "description": "Error"
          }
        }
      }
    },
    "/vc/education/cedia": {
      "post": {
        "tags": [
          "Verifiable Credentials"
        ],
        "summary": "Issue a Education VC for CEDIA",
        "description": "Generate, sign and register a RedClara Verifiable Credential for Education for CEDIA",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "description": "",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "claimsVerifier": {
                  "type": "string",
                  "description": "The Claims Verifier smart contract address where will be registered the VC",
                  "default": "0x8d50f6E736747e7F68AbEe261d024e36db4D3968"
                },
                "trustedList": {
                  "type": "string",
                  "description": "The address of the TL that will be used to verify the credential Root of Trust",
                  "default": "0x308fA5fBB3BDF36f496E8C21a80265BC1178025d"
                },
                "data": {
                  "type": "object",
                  "description": "The credential information",
                  "default": {
                    "name": "Diploma Certificado Título y/o Grado",
                    "expirationDate": "2024-06-22T16:04:16.297Z",
                    "subject": {
                      "did": "did:lac:main:0xa08ff271df7c47dea239a1d07f9c97782fc811f8",
                      "givenName": "Sergio",
                      "familyName": "Ceron",
                      "email": "email@email.com",
                      "nationalId": "271367812367"
                    },
                    "signers": [{
                      "did": "did:lac:main:0xeaa30ea9dd1da717034bcd9ebee5b62694d10ce7",
                      "name": "Nombre del signer 1"
                    }],
                    "diploma": {
                      "title": "Ing. en Sistemas Computacionales",
                      "description": "descripción",
                      "category": "categoría",
                      "modality": "modalidad",
                      "url": "https://url.com",
                      "issued": "2022-06-22T16:04:16.297Z",
                      "educationalInstitution": "institución académica",
                      "courseID": "C-444-555",
                      "approved": true,
                      "grade": "calificación",
                      "campusName": "Nombre campus",
                      "city": "MX",
                      "country": "Mexico",
                      "recordID": "1294;99572;3079",
                      "hashQR": "https://phoenix.cic.userena.cl/verificacion.php?doc=OS2%2ByEb4Wo8pwmag2yJLo2fShnLKVo2VN%2B9NQWuLUB8%3D"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "id": "VC identifier"
              }
            }
          },
          "500": {
            "description": "Error"
          }
        }
      }
    },
    "/vc/education/redclara": {
      "post": {
        "tags": [
          "Verifiable Credentials"
        ],
        "summary": "Issue a Education VC for Red Clara and LACChain Course",
        "description": "Generate, sign and register a RedClara Verifiable Credential for Education for Red Clara and LACChain Course",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "description": "",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "claimsVerifier": {
                  "type": "string",
                  "description": "The Claims Verifier smart contract address where will be registered the VC",
                  "default": "0x8d50f6E736747e7F68AbEe261d024e36db4D3968"
                },
                "trustedList": {
                  "type": "string",
                  "description": "The address of the TL that will be used to verify the credential Root of Trust",
                  "default": "0x308fA5fBB3BDF36f496E8C21a80265BC1178025d"
                },
                "data": {
                  "type": "object",
                  "description": "The credential information",
                  "default": {
                    "name": "Diploma Certificado Título y/o Grado",
                    "expirationDate": "2024-06-22T16:04:16.297Z",
                    "subject": {
                      "did": "did:lac:main:0xa08ff271df7c47dea239a1d07f9c97782fc811f8",
                      "givenName": "Sergio",
                      "familyName": "Ceron",
                      "email": "email@email.com",
                      "nationalId": "271367812367"
                    },
                    "signers": [{
                      "did": "did:lac:main:0xeaa30ea9dd1da717034bcd9ebee5b62694d10ce7",
                      "name": "Nombre del signer 1"
                    }],
                    "diploma": {
                      "title": "Ing. en Sistemas Computacionales",
                      "description": "descripción",
                      "category": "categoría",
                      "modality": "modalidad",
                      "url": "https://url.com",
                      "issued": "2022-06-22T16:04:16.297Z",
                      "educationalInstitution": "institución académica",
                      "courseID": "C-444-555",
                      "approved": true,
                      "grade": "calificación",
                      "campusName": "Nombre campus",
                      "city": "MX",
                      "country": "Mexico",
                      "recordID": "1294;99572;3079",
                      "hashQR": "https://phoenix.cic.userena.cl/verificacion.php?doc=OS2%2ByEb4Wo8pwmag2yJLo2fShnLKVo2VN%2B9NQWuLUB8%3D"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "id": "VC identifier"
              }
            }
          },
          "500": {
            "description": "Error"
          }
        }
      }
    },
    "/vc/{id}": {
      "get": {
        "tags": [
          "Verifiable Credentials"
        ],
        "summary": "Get full VC",
        "description": "Gets the full Verifiable Credential",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "The VC identifier",
            "in": "path",
            "required": true,
            "type": "string",
            "default": "62c7ce0a7f3b503f0d33d1a2"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "id": "Credential identifier",
                "status": "Credential status (active, revoked)",
                "claimsVerifier": "The Claims Verifier address",
                "credential": "The Verifiable Credential data",
                "createdAt": "Creation timestamp",
                "revokedAt": "Revocation timestamp"
              }
            }
          },
          "404": {
            "description": "VC not found"
          },
          "500": {
            "description": "Error",
            "examples": {
              "application/json": false
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Verifiable Credentials"
        ],
        "summary": "Revoke a VC",
        "description": "Revoke a Verifiable Credential issued by the current user",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "description": "The VC identifier",
            "in": "path",
            "required": true,
            "type": "string",
            "default": "62c7ce0a7f3b503f0d33d1a2"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "hash": "The blockchain transaction hash"
              }
            }
          },
          "404": {
            "description": "VC not found"
          },
          "500": {
            "description": "Error",
            "examples": {
              "application/json": false
            }
          }
        }
      }
    },
    "/vc/revoke/{registry}/{hash}": {
      "delete": {
        "tags": [
          "Verifiable Credentials"
        ],
        "summary": "Revoke a VC",
        "description": "Revoke a Verifiable Credential issued by the current user",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "registry",
            "description": "The VC registry",
            "in": "path",
            "required": true,
            "type": "string",
            "default": null
          },
          {
            "name": "hash",
            "description": "The VC hash",
            "in": "path",
            "required": true,
            "type": "string",
            "default": null
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "hash": "The blockchain transaction hash"
              }
            }
          },
          "404": {
            "description": "VC not found"
          },
          "500": {
            "description": "Error",
            "examples": {
              "application/json": false
            }
          }
        }
      }
    },
    "/vc/verify": {
      "post": {
        "tags": [
          "Verifiable Credentials"
        ],
        "summary": "Verify a VC",
        "description": "Perform a blockchain & trusted verification of a Verifiable Credential",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "name": "body",
          "description": "The JSON-LD Verifiable Credential",
          "in": "body",
          "required": true,
          "type": "object",
          "default": {
            "@context": [
              "https://www.w3.org/2018/credentials/v1",
              "https://credentials-library.lacchain.net/credentials/trusted/v1",
              "https://w3id.org/security/bbs/v1",
              "https://w3id.org/vaccination/v1"
            ],
            "type":[
              "VerifiableCredential",
              "VaccinationCertificate"
            ],
            "id":"urn:uuid:8943777a-d376-45ca-90b4-572b7592fc38",
            "name":"COVID-19",
            "issuer":"did:lac:main:0xdfeb89479ad22cf277b3e3100c128a0151e612cb",
            "issuanceDate":"2022-07-10T00:06:29.152Z",
            "expirationDate":"2024-06-22T16:04:16.297Z",
            "trustedList":"0x308fA5fBB3BDF36f496E8C21a80265BC1178025d",
            "credentialSubject":{
              "id":"did:lac:main:0xeaa30ea9dd1da717034bcd9ebee5b62694d10ce7",
              "type":"VaccinationEvent",
              "batchNumber":"034343",
              "administeringCentre":"Mexico City Vaccination Center 1",
              "healthProfessional":"Juan Perez",
              "countryOfVaccination":"Mexico",
              "order":"1",
              "recipient":{
                "type":"VaccineRecipient",
                "givenName":"Sergio",
                "familyName":"Ceron",
                "gender":"male",
                "birthDate":"01-01-1989"
              },
              "vaccine":{
                "type":"Vaccine",
                "disease":"COVID-19",
                "atcCode":"J07BX03"
              }
            },
            "proof":[
              {
                "type":"EcdsaSecp256k1Signature2019",
                "created":"2022-07-10T00:06:32.876Z",
                "proofPurpose":"assertionMethod",
                "verificationMethod":"did:lac:main:0xdfeb89479ad22cf277b3e3100c128a0151e612cb#vm-0",
                "domain":"0xD923669d0E95f0dE8bCdDD4192f43dED7DDaC6a3",
                "proofValue":"0x7cde8446d4345096e54b5146e07e63091f5ae6d606396df738cffac89c8add3c4e77a598cf65d0b7e4bfb23b258be86bdf9eaede0ca2a270b87d9c3b2c0e2eae1b"
              }
            ],
            "credentialStatus":{
              "id":"0xEc95EEafc97819effe49A5D2622f1398ec73B57F",
              "type":"SmartContract"
            }
          }
        }],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "credentialExists": "If the credential is registered in the Claims Verifier (boolean)",
              "isNotRevoked": "If the credential has not been revoked (boolean)",
              "issuerSignatureValid": "If the issuer signature is valid cryptographically (boolean)",
              "additionalSigners": "If the credential has additional signatures and they are valid (boolean)",
              "isNotExpired": "If the credential has not expired yet (boolean)",
              "rootOfTrust": "The Chain of Trust"
            }
          },
          "500": {
            "description": "Error",
            "examples": {
              "application/json": false
            }
          }
        }
      }
    },
    "/did/create": {
      "post": {
        "tags": [
          "Create DID"
        ],
        "summary": "Create DID",
        "description": "Create DID and add verification method",
        "operationId": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "description": "The entity information",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "credentialsRegistry": {
                  "type": "string",
                  "description": "The Credentials Registry address",
                  "default": "0xbDa1238272FDA6888556449Cb77A87Fc8205E8ba"
                },
                "rpcUrl": {
                  "type": "string",
                  "description": "The RPC URL",
                  "default": "https://writer.lacchain.net"
                },
                "network": {
                  "type": "string",
                  "description": "The network",
                  "default": "testnet"
                },
                "nodeAddress": {
                  "type": "string",
                  "description": "The node address",
                  "default": null
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "examples": {
              "application/json": {
                "did": "The DID object",
                "verification": "The verification method object"
              }
            }
          },
          "500": {
            "description": "Error"
          }
        }
      }
    }
  }
}